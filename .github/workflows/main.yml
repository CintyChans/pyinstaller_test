
name: Python application

on:
  push:
   branches: ["main"]
   tags: v[0-9]+.[0-9]+.[0-9]+

#设置操作系统
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest,ubuntu-latest,macos-latest]
      
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9.13
        uses: actions/setup-python@v4 
        with:
          python-version: '3.9.13'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 
          python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. ./test.proto
            
      - name: pytest
        run: pytest  test_main.py 
     
       pyinstaller打包test.py
      - name: pyinstaller package
        if: github.ref_type=='tag'
        run: pyinstaller  -F main.py -n ${{ runner.os }}_test
          
      - name: note
<<<<<<< HEAD
        if: github.ref_type=='tag'
=======
       # if: contains(github.ref_name, steps.json.outputs.tags)
>>>>>>> e7d3821ce061e363c43f815a26dc80874ff16fc9
        shell: python 
        run: |
          import json;import os;f=open('releasenotes.json');obj=json.load(f);abbr='';x=[i['notes'] for i in obj['tags_releasenotes'] if i['name']=='${{github.ref_name}}'];note=x[0];f.close()
          os.system("echo \"note={}\" >> $GITHUB_ENV".format(note))
<<<<<<< HEAD
=======
          

      - name: ${{ env.note }}
       # if: contains(github.ref_name, steps.json.outputs.tags)
        run: echo "${{ env.note }}"

      #  #上传文件
      # - name: Upload Artifacts
      #   if: github.ref_type=='tag'
      #   uses: actions/upload-artifact@v3
      #   with:
      #      name: ${{ runner.os }}_pyinstaller
      #      path: ./dist
>>>>>>> e7d3821ce061e363c43f815a26dc80874ff16fc9
          

       
      - name: Upload Artifacts
        if: github.ref_type=='tag'
        uses: actions/upload-artifact@v3
        with:
           name: ${{ runner.os }}_pyinstaller
           path: ./dist
          
      - name: download-artifact   
        if: github.ref_type=='tag'
        uses: actions/download-artifact@v3
        with: 
          path: ./artifact
          
 
      - name: Release
        if: github.ref_type=='tag'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{github.ref_name}}
          name: ${{github.ref_name}}
          body: ${{ env.note}}
          draft: false
          prerelease: false
          files: ./artifact/${{ runner.os }}_pyinstaller/*
