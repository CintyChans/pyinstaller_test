name: Python application

on:
  push:
   branches: ["main"]
   tags:        
      - v*.*
      - v*.*.*
      - v*.*.*.*

#设置操作系统
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest,ubuntu-latest,macos-latest]
      
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
       #安装python
       
      - name: JSON to variables
        id: packageJson
        uses: RadovanPelka/github-action-json@main
        with:
          path: releasenotes.json


       
      - name: Set up Python 3.9.13
        uses: actions/setup-python@v4 
        with:
          python-version: '3.9.13'
        
       #安装pip以及安装第三方库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 
          python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. ./test.proto
            
       
        #单元测试
      - name: test
        run: python -m unittest  test_main.py 
     
       #pyinstaller打包test.py
      - name: pyinstaller package
        if: github.ref_type=='tag'
        run: pyinstaller  -F main.py -n ${{ runner.os }}_test
          
       #上传文件
      - name: Upload Artifacts
        if: github.ref_type=='tag'
        uses: actions/upload-artifact@v3
        with:
           name: ${{ runner.os }}_pyinstaller
           path: ./dist
          
      - name: download-artifact   
        if: github.ref_type=='tag'
        uses: actions/download-artifact@v3
        with: 
          path: ./artifact
          
 
        #发布文件  
      - name: Release
    #    if: github.ref_type=='tag'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name:  ${{ github.ref }}
          body: ${{ steps.packageJson.outputs.tags-releasenotes.github.ref}}
          draft: false
          prerelease: false
          files: ./artifact/${{ runner.os }}_pyinstaller/*

            
